---
import Layout from '../../layouts/Layout.astro';
import { getAllArtifacts, getArtifactByFileName, getArtifactPaths } from '../../utils/claude-artifacts';
import ArtifactRenderer from '../../components/ArtifactRenderer';

export async function getStaticPaths() {
  return await getArtifactPaths();
}
const { artifact } = Astro.params;
// Props come directly from getArtifactPaths
const { fileName, name, path: filePath, metadata } = Astro.props;

if (!fileName) {
  return Astro.redirect('/404');
}
// Get the component from the artifactComponents map
// Remove .jsx extension if it exists in the fileName
const componentName = fileName.replace(/\.jsx$/, '');
---
<Layout title={`Artifact: ${name}`}>
  <div class="container mx-auto px-4 py-8">
    <header class="mb-8">
      <a href="/" class="text-blue-500 hover:text-blue-700 mb-2 inline-block">
        &larr; Back to all artifacts
      </a>
      <h1 class="text-3xl font-bold">{name}</h1>
      {metadata?.description && (
        <p class="text-gray-600 mt-2">{metadata.description}</p>
      )}
    </header>

    <div class="bg-white rounded-lg shadow-md p-6">
      {/* Render the React component */}
      <div id="artifact-container" data-artifact-name={fileName}>
        <ArtifactRenderer client:load componentName={componentName} />
      </div>
    </div>
  </div>
</Layout>

